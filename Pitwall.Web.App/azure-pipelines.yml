# Node.js with React
# Build a Node.js project that uses React.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
  branches:
    include:
      - main
  paths:
    include:
      - Pitwall.Web.App/*

pr:
  autoCancel: true
  drafts: true
  branches:
    include:
      - main
  paths:
    include:
      - Pitwall.Web.App/*

pool:
  vmImage: ubuntu-latest

steps:
  - task: NodeTool@0
    inputs:
      versionSpec: "18.x"
    displayName: "Install Node.js"

  - task: UsePythonVersion@0
    displayName: "Use Python 3.x"

  - task: Cache@2
    displayName: "Cache .next/cache"
    inputs:
      key: next | $(Agent.OS) | Pitwall.Web.App/package-lock.json
      path: "$(System.DefaultWorkingDirectory)/Pitwall.Web.App/.next/cache"

  #parseInt(process.env.PORT, 10) azure windows app service issue - https://github.com/vercel/next.js/discussions/38448
  - script: |
      cd Pitwall.Web.App
      npm install
      npm run build-staging
      sudo mkdir /build
      sudo mkdir /build/public
      sudo mkdir /build/.next
      sudo mkdir /build/.next/static
      sudo cp -r .next/standalone build
      sudo cp -r public build/public
      sudo cp -r .next/static build/.next/static
      cd build
      sudo sed -i -e 's/parseInt(process.env.PORT, 10)/process.env.PORT/g' server.js
    displayName: "npm install and build staging"
    env:
      TARGET_ENV: staging

  - task: ArchiveFiles@1
    condition: eq(variables['Build.SourceBranch'], 'refs/heads/main')
    displayName: "Create staging package"
    inputs:
      rootFolder: Pitwall.Web.App/build
      includeRootFolder: false
      archiveFile: "$(Build.ArtifactStagingDirectory)/webapp/staging/$(Build.BuildId).zip"

  - task: PublishBuildArtifacts@1
    condition: eq(variables['Build.SourceBranch'], 'refs/heads/main')
    displayName: "Publish staging package"
    inputs:
      PathtoPublish: "$(Build.ArtifactStagingDirectory)/webapp/staging/$(Build.BuildId).zip"
      ArtifactName: "packaged_staging_build"

  - task: AzureRmWebAppDeployment@4
    condition: eq(variables['Build.SourceBranch'], 'refs/heads/main')
    displayName: "Deploy to staging"
    inputs:
      ConnectionType: "AzureRM"
      azureSubscription: "Virtual Pitwall 2024 Q2"
      appType: "webApp"
      WebAppName: "virtualpitwall-staging"
      packageForLinux: "$(Build.ArtifactStagingDirectory)/webapp/staging/$(Build.BuildId).zip"
      WebConfigParameters: "-Handler iisnode -NodeStartFile server.js -appType node"
      AppSettings: "-WEBSITE_NODE_DEFAULT_VERSION ~20"
      enableCustomDeployment: true
      DeploymentType: "zipDeploy"
